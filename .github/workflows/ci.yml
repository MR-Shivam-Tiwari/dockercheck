name: CI/CD Pipeline - Hostinger VPS

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üß† Checkout Code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üê≥ Build Docker image
  run: |
    IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/my-node-app"
    TAG="${GITHUB_SHA}"
    docker build -f ./path/to/Dockerfile -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$TAG" .


      - name: üöÄ Push image to Docker Hub
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/my-node-app"
          TAG="${GITHUB_SHA}"
          docker push "$IMAGE_NAME:latest"
          docker push "$IMAGE_NAME:$TAG"

      - name: üåç Deploy to Hostinger VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/my-node-app"
            TAG="${GITHUB_SHA}"

            echo "Pulling latest Docker image..."
            docker pull "$IMAGE_NAME:latest"

            echo "Stopping existing container..."
            docker stop myapp || true
            docker rm myapp || true

            echo "Cleaning up old images..."
            docker image prune -af || true

            echo "Starting new container..."
            docker run -d \
              --name myapp \
              --restart always \
              -p 5003:5003 \
              "$IMAGE_NAME:latest"

            echo "‚úÖ Deployment complete!"
